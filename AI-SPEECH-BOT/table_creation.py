from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_login import (
    UserMixin,
)

# start App....
app = Flask(__name__)

# connect DB....
app.config[
    "SQLALCHEMY_DATABASE_URI"
] = "postgresql://postgres:root@localhost/flask_ai_bot"
# update password if needed!

app.config["SECRET_KEY"] = "AiBotSecretKey"
app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = False
db = SQLAlchemy(app)


# Models for Tables....
# Default values to load initial model are id=1, x=40, y=5
class BotInputValues(db.Model):
    """ Table for recent parameters of graph """

    id = db.Column(db.Integer, primary_key=True)
    x = db.Column(db.Integer)
    y = db.Column(db.Integer)

    def __init__(self, x, y):
        self.x = x
        self.y = y


class BotData(db.Model):
    """ Table for ErrorData and responses """

    id = db.Column(db.Integer, primary_key=True)
    tag = db.Column(db.String(80))
    patterns = db.Column(db.Text)
    responses = db.Column(db.Text)
    context_set = db.Column(db.Text)
    status = db.Column(db.Integer)

    def __init__(
        self, tag=None, patterns=None, responses=None, context_set=None, status=0
    ):
        self.tag = tag
        self.patterns = patterns
        self.responses = responses
        self.context_set = context_set
        self.status = status


# pip install flask_login if 'No module named flask_login'
class User(UserMixin, db.Model):
    """ Table for admin management """

    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(30), unique=True)
    password = db.Column(db.String(30))

    def __init__(self, username=None, password=None):
        self.username = username
        self.password = password


db.drop_all()
db.create_all()  # to create the table....

db.session.add(User("root", "root"))
db.session.add(BotInputValues(66, 9))  # new X, Y Values for the graph.
db.session.add(
    BotData(
        "AssertionError",
        "assertion statement fails|assertion error|assertion failing|can't find assertion|assert statement fails|assert failing|can't find assert",
        "AssertionError - An AssertionError is an error generated by the program to indicate that something that should never happen, has happened. It is commonly used in the method of 'defensive programming' where we check all the time to make sure that the state of the program and it's inputs and outputs are correct.",
        None,
        0,  # added zero for demo purpose....
    )
)
db.session.add(
    BotData(
        "EOFError",
        "the input() function hits the end-of-file condition|eof error|end of file error|EOF condition|EOF|end of file",
        "EOFError- This specific error means the file mentioned in the error message ends abruptly without the proper closing tags, and the code was unable to be parsed as a result.",
        None,
        1,
    )
)
db.session.add(
    BotData(
        "IndexError",
        "index of sequence out of range|index error|can't index propoerly|indexing failed|can't sequence properly|index out of boud|cannot find index properly",
        "IndexError- An IndexError is raised when a sequence reference is out of range.The given code is rewritten as follows to catch the exception and find its type",
        None,
        1,
    )
)
db.session.add(
    BotData(
        "Memory Error",
        "code runs out of memory|memory error|cannot find proper space to operate|operation runs out of memory|operation runs out of space",
        "Memory Error- A memory error means that your program has run out of memory. This means that your program somehow creates too many objects. In your example, you have to look for parts of your algorithm that could be consuming a lot of memory. If an operation runs out of memory it is known as memory error.",
        None,
        1,
    )
)
db.session.add(
    BotData(
        "Syntax Error",
        "syntax cannot be matched|no proper syntax|syntax error|syntax error is encountered",
        "Syntax Error- A syntax error is an error in the source code of a program. Since computer programs must follow strict syntax to compile correctly, any aspects of the code that do not conform to the syntax of the programming language will produce a syntax error",
        None,
        1,
    )
)
# newly added queries for basic questions
db.session.add(
    BotData(
        "Timesheet",
        "Fill Timesheet|What is assigned task|When does Timesheet freeze",
        "To fill timesheet using the web application, go to Timesheet Entry. To fill on mobile, install the Timesheet app from Ux Apps, available at https://uxapps.ultimatix.net.",
        None,
        1,
    )
)
db.session.add(
    BotData(
        "Ultimatix authenticator  login",
        "What is AuthCode?|What is Ultimatix Authenticator app? |Is Ultimatix Authenticator, a secure app?",
        "Ultimatix Authenticator App can be used to generate a 6-digit AuthCode for authentication, wherever required. It works offline to generate the AuthCode. It is available for Android and iOS smartphones.",
        None,
        1,
    )
)
db.session.add(
    BotData(
        "helpdesk ticket",
        "helpdesk|how to raise ticket",
        "Global Helpdesk Contact Details: Buzz (VoIP): 500 5555 PSTN: 6060 5555 # / 022 - 2518 8155 * Toll Free (India): 1-800-CALL-TCS (1-800-225-5827) * Toll Free (US): 1-877-TCS-INDY (1-877-827-4639) Email: Global.helpdesk@tcs.com / Ultimatix.helpdesk@tcs.com * Web: https://www.ultimatix.net * Ultimatix Helpdesk Contact Details. # Available as a local number in all metros in India. In case of difficulty, prefix STD code of nearest metro.",
        None,
        1,
    )
)
db.session.add(
    BotData("Greetings", "hi|hello|hey|holla", "Hi , how can I help you?", None, 1)
)
db.session.add(
    BotData(
        "self introduction",
        "who are you|about you|yourself|introduction",
        " I am Louise, an ai modelled speech bot, to help you developers with your queries. Happy to help you! ",
        None,
        1,
    )
)


db.session.commit()
